'use strict';
const {auth} = require('./authController');
const roles = require('../../src/roles');

const mongoose = require('mongoose');
const PedwayEntrance = mongoose.model('entrance');

/**
 * Returns all pedway entrances
 *
 * @param {Object} req the request object
 * @param {Object} res the response object
 */
exports.getAll = function(req, res) {
  PedwayEntrance.find({}, function(err, entrances) {
    if (err) {
      res.send(err);
    } else {
      res.json(entrances);
    }
  });
};

/**
 * Creates a pedway entrance
 *
 * @param {Object} req the request object
 * @param {Object} res the response object
 */
exports.create = function(req, res) {
  auth(req, roles.ADMIN).then(() => {
    const entrance = new PedwayEntrance(req.body);
    entrance.save(function(err, entrance) {
      if (err) {
        res.send(err);
      } else {
        res.json(entrance);
      }
    });
  }).catch((err)=>res.status(401).send(err));
};

/**
 * Gets a pedway entrance by the entrance id.
 * Note that this is the OSM id associated with each entrance, and not the
 * autogenerated _id.
 *
 * @param {Object} req the request object
 * @param {Object} res the response object
 */
exports.getById = function(req, res) {
  PedwayEntrance.findOne(
      {'id': req.params.entranceId},
      function(err, entrance) {
        if (err) {
          res.send(err);
        } else {
          res.json(entrance);
        }
      });
};

/**
 * Updates a pedway entrance
 *
 * @param {Object} req the request object
 * @param {Object} res the response object
 */
exports.update = function(req, res) {
  auth(req, roles.ADMIN).then(() => {
    PedwayEntrance.findOneAndUpdate(
        {'id': req.params.entranceId}, req.body,
        {new: true}, function(err, entrance) {
          if (err) {
            res.send(err);
          } else {
            res.json(entrance);
          }
        });
  }).catch((err)=>res.status(401).send(err));
};
